{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\fa.svelte",
    "..\\..\\index.svelte",
    "..\\..\\index.svelte",
    "..\\..\\HSplitPane.svelte",
    "..\\..\\VSplitPane.svelte",
    "..\\..\\Sidebar.svelte",
    "..\\..\\TextSpace.svelte",
    "..\\..\\Toast.svelte",
    "..\\..\\Board.svelte",
    "..\\..\\Choice.svelte",
    "..\\..\\Login.svelte",
    "..\\..\\Register.svelte"
  ],
  "sourcesContent": [
    "<script>\r\nimport {\r\n  joinCss,\r\n  getStyles,\r\n  getTransform,\r\n} from './utils';\r\n\r\nlet clazz = '';\r\nexport { clazz as class };\r\nexport let id = '';\r\nexport let style = '';\r\n\r\nexport let icon;\r\n\r\nexport let size = '';\r\nexport let color = '';\r\n\r\nexport let fw = false;\r\nexport let pull = '';\r\n\r\nexport let scale = 1;\r\nexport let translateX = 0;\r\nexport let translateY = 0;\r\nexport let rotate = '';\r\nexport let flip = false;\r\n\r\nexport let spin = false;\r\nexport let pulse = false;\r\n\r\n// Duotone Icons\r\nexport let primaryColor = '';\r\nexport let secondaryColor = '';\r\nexport let primaryOpacity = 1;\r\nexport let secondaryOpacity = 0.4;\r\nexport let swapOpacity = false;\r\n\r\nlet i;\r\nlet c;\r\nlet s;\r\nlet transform;\r\n\r\n$: i = (icon && icon.icon) || [0, 0, '', [], ''];\r\n\r\n$: c = joinCss(\r\n  [\r\n    clazz,\r\n    'svelte-fa',\r\n    spin && 'spin',\r\n    pulse && 'pulse',\r\n  ],\r\n  ' ',\r\n);\r\n\r\n$: s = getStyles(style, size, pull, fw);\r\n\r\n$: transform = getTransform(scale, translateX, translateY, rotate, flip, 512);\r\n</script>\r\n\r\n<style>\r\n.spin {\r\n  animation: spin 2s 0s infinite linear;\r\n}\r\n\r\n.pulse {\r\n  animation: spin 1s infinite steps(8);\r\n}\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n\r\n{#if i[4]}\r\n  <svg\r\n    {id}\r\n    class={c}\r\n    style={s}\r\n    viewBox={`0 0 ${i[0]} ${i[1]}`}\r\n    aria-hidden=\"true\"\r\n    role=\"img\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <g\r\n      transform={`translate(${i[0] / 2} ${i[1] / 2})`}\r\n      transform-origin={`${i[0] / 4} 0`}\r\n    >\r\n      <g {transform}>\r\n        {#if typeof i[4] == 'string'}\r\n          <path\r\n            d={i[4]}\r\n            fill={color || primaryColor || 'currentColor'}\r\n            transform={`translate(${i[0] / -2} ${i[1] / -2})`}\r\n          />\r\n        {:else}\r\n          <path\r\n            d={i[4][0]}\r\n            fill={secondaryColor || color || 'currentColor'}\r\n            fill-opacity={swapOpacity != false ? primaryOpacity : secondaryOpacity}\r\n            transform={`translate(${i[0] / -2} ${i[1] / -2})`}\r\n          />\r\n          <path\r\n            d={i[4][1]}\r\n            fill={primaryColor || color || 'currentColor'}\r\n            fill-opacity={swapOpacity != false ? secondaryOpacity : primaryOpacity}\r\n            transform={`translate(${i[0] / -2} ${i[1] / -2})`}\r\n          />\r\n        {/if}\r\n      </g>\r\n    </g>\r\n  </svg>\r\n{/if}\r\n",
    "<style>\r\n  .svlt-grid-item {\r\n    touch-action: none;\r\n    position: absolute;\r\n    will-change: auto;\r\n    backface-visibility: hidden;\r\n    -webkit-backface-visibility: hidden;\r\n  }\r\n\r\n  .svlt-grid-resizer {\r\n    user-select: none;\r\n    width: 20px;\r\n    height: 20px;\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    cursor: se-resize;\r\n  }\r\n  .svlt-grid-resizer::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    right: 3px;\r\n    bottom: 3px;\r\n    width: 5px;\r\n    height: 5px;\r\n    border-right: 2px solid rgba(0, 0, 0, 0.4);\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0.4);\r\n  }\r\n\r\n  .svlt-grid-active {\r\n    z-index: 3;\r\n    cursor: grabbing;\r\n    position: fixed;\r\n    opacity: 0.5;\r\n\r\n    /*No user*/\r\n    backface-visibility: hidden;\r\n    -webkit-backface-visibility: hidden;\r\n    -moz-backface-visibility: hidden;\r\n    -o-backface-visibility: hidden;\r\n    -ms-backface-visibility: hidden;\r\n    user-select: none;\r\n  }\r\n\r\n  .shadow-active {\r\n    z-index: 2;\r\n    transition: all 0.2s;\r\n  }\r\n\r\n  .svlt-grid-shadow {\r\n    position: absolute;\r\n    background: red;\r\n    will-change: transform;\r\n    background: pink;\r\n    backface-visibility: hidden;\r\n    -webkit-backface-visibility: hidden;\r\n  }\r\n</style>\r\n\r\n<div\r\n  draggable={false}\r\n  on:pointerdown={item && item.customDragger ? null : draggable && pointerdown}\r\n  class=\"svlt-grid-item\"\r\n  class:svlt-grid-active={active || (trans && rect)}\r\n  style=\"width: {active ? newSize.width : width}px; height:{active ? newSize.height : height}px; \r\n  {active ? `transform: translate(${cordDiff.x}px, ${cordDiff.y}px);top:${rect.top}px;left:${rect.left}px;` : trans ? `transform: translate(${cordDiff.x}px, ${cordDiff.y}px); position:absolute; transition: width 0.2s, height 0.2s;` : `transition: transform 0.2s, opacity 0.2s; transform: translate(${left}px, ${top}px); `} \">\r\n  <slot movePointerDown={pointerdown} {resizePointerDown} />\r\n  {#if resizable && !item.customResizer}\r\n    <div class=\"svlt-grid-resizer\" on:pointerdown={resizePointerDown} />\r\n  {/if}\r\n</div>\r\n\r\n{#if active || trans}\r\n  <div class=\"svlt-grid-shadow shadow-active\" style=\"width: {shadow.w * xPerPx - gapX * 2}px; height: {shadow.h * yPerPx - gapY * 2}px; transform: translate({shadow.x * xPerPx + gapX}px, {shadow.y * yPerPx + gapY}px); \" bind:this={shadowElement} />\r\n{/if}\r\n\r\n<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let sensor;\r\n  export let width;\r\n  export let height;\r\n  export let left;\r\n  export let top;\r\n\r\n  export let resizable;\r\n  export let draggable;\r\n\r\n  export let id;\r\n  export let container;\r\n\r\n  export let xPerPx;\r\n  export let yPerPx;\r\n\r\n  export let gapX;\r\n  export let gapY;\r\n  export let item;\r\n\r\n  export let max;\r\n  export let min;\r\n\r\n  export let cols;\r\n\r\n  export let nativeContainer;\r\n\r\n  let shadowElement;\r\n  let shadow = {};\r\n\r\n  let active = false;\r\n\r\n  let initX, initY;\r\n\r\n  let capturePos = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  let cordDiff = { x: 0, y: 0 };\r\n\r\n  let newSize = { width, height };\r\n  let trans = false;\r\n\r\n  let anima;\r\n\r\n  const inActivate = () => {\r\n    const shadowBound = shadowElement.getBoundingClientRect();\r\n    const xdragBound = rect.left + cordDiff.x;\r\n    const ydragBound = rect.top + cordDiff.y;\r\n\r\n    cordDiff.x = shadow.x * xPerPx + gapX - (shadowBound.x - xdragBound);\r\n    cordDiff.y = shadow.y * yPerPx + gapY - (shadowBound.y - ydragBound);\r\n\r\n    active = false;\r\n    trans = true;\r\n\r\n    clearTimeout(anima);\r\n\r\n    anima = setTimeout(() => {\r\n      trans = false;\r\n    }, 100);\r\n\r\n    dispatch(\"pointerup\", {\r\n      id,\r\n    });\r\n  };\r\n\r\n  let repaint = (cb, isPointerUp) => {\r\n    dispatch(\"repaint\", {\r\n      id,\r\n      shadow,\r\n      isPointerUp,\r\n      onUpdate: cb,\r\n    });\r\n  };\r\n\r\n  // Autoscroll\r\n  let _scrollTop = 0;\r\n  let containerFrame;\r\n  let rect;\r\n  let scrollElement;\r\n\r\n  const getContainerFrame = (element) => {\r\n    if (element === document.documentElement || !element) {\r\n      const { height, top, right, bottom, left } = nativeContainer.getBoundingClientRect();\r\n\r\n      return {\r\n        top: Math.max(0, top),\r\n        bottom: Math.min(window.innerHeight, bottom),\r\n      };\r\n    }\r\n\r\n    return element.getBoundingClientRect();\r\n  };\r\n\r\n  const getScroller = (element) => (!element ? document.documentElement : element);\r\n\r\n  const pointerdown = ({ clientX, clientY, target }) => {\r\n    initX = clientX;\r\n    initY = clientY;\r\n\r\n    capturePos = { x: left, y: top };\r\n    shadow = { x: item.x, y: item.y, w: item.w, h: item.h };\r\n    newSize = { width, height };\r\n\r\n    containerFrame = getContainerFrame(container);\r\n    scrollElement = getScroller(container);\r\n\r\n    cordDiff = { x: 0, y: 0 };\r\n    rect = target.closest(\".svlt-grid-item\").getBoundingClientRect();\r\n\r\n    active = true;\r\n    trans = false;\r\n    _scrollTop = scrollElement.scrollTop;\r\n\r\n    window.addEventListener(\"pointermove\", pointermove);\r\n    window.addEventListener(\"pointerup\", pointerup);\r\n  };\r\n\r\n  let sign = { x: 0, y: 0 };\r\n  let vel = { x: 0, y: 0 };\r\n  let intervalId = 0;\r\n\r\n  const stopAutoscroll = () => {\r\n    clearInterval(intervalId);\r\n    intervalId = false;\r\n    sign = { x: 0, y: 0 };\r\n    vel = { x: 0, y: 0 };\r\n  };\r\n\r\n  const update = () => {\r\n    const _newScrollTop = scrollElement.scrollTop - _scrollTop;\r\n\r\n    const boundX = capturePos.x + cordDiff.x;\r\n    const boundY = capturePos.y + (cordDiff.y + _newScrollTop);\r\n\r\n    let gridX = Math.round(boundX / xPerPx);\r\n    let gridY = Math.round(boundY / yPerPx);\r\n\r\n    shadow.x = Math.max(Math.min(gridX, cols - shadow.w), 0);\r\n    shadow.y = Math.max(gridY, 0);\r\n\r\n    if (max.y) {\r\n      shadow.y = Math.min(shadow.y, max.y);\r\n    }\r\n\r\n    repaint();\r\n  };\r\n\r\n  const pointermove = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n\r\n    const { clientX, clientY } = event;\r\n    cordDiff = { x: clientX - initX, y: clientY - initY };\r\n\r\n    const Y_SENSOR = sensor;\r\n\r\n    let velocityTop = Math.max(0, (containerFrame.top + Y_SENSOR - clientY) / Y_SENSOR);\r\n    let velocityBottom = Math.max(0, (clientY - (containerFrame.bottom - Y_SENSOR)) / Y_SENSOR);\r\n\r\n    const topSensor = velocityTop > 0 && velocityBottom === 0;\r\n    const bottomSensor = velocityBottom > 0 && velocityTop === 0;\r\n\r\n    sign.y = topSensor ? -1 : bottomSensor ? 1 : 0;\r\n    vel.y = sign.y === -1 ? velocityTop : velocityBottom;\r\n\r\n    if (vel.y > 0) {\r\n      if (!intervalId) {\r\n        // Start scrolling\r\n        // TODO Use requestAnimationFrame\r\n        intervalId = setInterval(() => {\r\n          scrollElement.scrollTop += 2 * (vel.y + Math.sign(vel.y)) * sign.y;\r\n          update();\r\n        }, 10);\r\n      }\r\n    } else if (intervalId) {\r\n      stopAutoscroll();\r\n    } else {\r\n      update();\r\n    }\r\n  };\r\n\r\n  const pointerup = (e) => {\r\n    stopAutoscroll();\r\n\r\n    window.removeEventListener(\"pointerdown\", pointerdown);\r\n    window.removeEventListener(\"pointermove\", pointermove);\r\n    window.removeEventListener(\"pointerup\", pointerup);\r\n    repaint(inActivate, true);\r\n  };\r\n\r\n  // Resize\r\n\r\n  let resizeInitPos = { x: 0, y: 0 };\r\n  let initSize = { width: 0, height: 0 };\r\n\r\n  const resizePointerDown = (e) => {\r\n    e.stopPropagation();\r\n    const { pageX, pageY } = e;\r\n\r\n    resizeInitPos = { x: pageX, y: pageY };\r\n    initSize = { width, height };\r\n\r\n    cordDiff = { x: 0, y: 0 };\r\n    rect = e.target.closest(\".svlt-grid-item\").getBoundingClientRect();\r\n    newSize = { width, height };\r\n\r\n    active = true;\r\n    trans = false;\r\n    shadow = { x: item.x, y: item.y, w: item.w, h: item.h };\r\n\r\n    containerFrame = getContainerFrame(container);\r\n    scrollElement = getScroller(container);\r\n\r\n    window.addEventListener(\"pointermove\", resizePointerMove);\r\n    window.addEventListener(\"pointerup\", resizePointerUp);\r\n  };\r\n\r\n  const resizePointerMove = ({ pageX, pageY }) => {\r\n    newSize.width = initSize.width + pageX - resizeInitPos.x;\r\n    newSize.height = initSize.height + pageY - resizeInitPos.y;\r\n\r\n    // Get max col number\r\n    let maxWidth = cols - shadow.x;\r\n    maxWidth = Math.min(max.w, maxWidth) || maxWidth;\r\n\r\n    // Limit bound\r\n    newSize.width = Math.max(Math.min(newSize.width, maxWidth * xPerPx - gapX * 2), min.w * xPerPx - gapX * 2);\r\n\r\n    newSize.height = Math.max(newSize.height, min.h * yPerPx - gapY * 2);\r\n\r\n    if (max.h) {\r\n      newSize.height = Math.min(newSize.height, max.h * yPerPx - gapY * 2);\r\n    }\r\n    // Limit col & row\r\n    shadow.w = Math.round((newSize.width + gapX * 2) / xPerPx);\r\n    shadow.h = Math.round((newSize.height + gapY * 2) / yPerPx);\r\n\r\n    repaint();\r\n  };\r\n\r\n  const resizePointerUp = (e) => {\r\n    e.stopPropagation();\r\n\r\n    repaint(inActivate, true);\r\n\r\n    window.removeEventListener(\"pointermove\", resizePointerMove);\r\n    window.removeEventListener(\"pointerup\", resizePointerUp);\r\n  };\r\n</script>\r\n",
    "<style>\r\n  .svlt-grid-container {\r\n    position: relative;\r\n    width: 100%;\r\n  }\r\n</style>\r\n\r\n<div class=\"svlt-grid-container\" style=\"height: {containerHeight}px\" bind:this={container}>\r\n  {#if xPerPx || !fastStart}\r\n    {#each items as item, i (item.id)}\r\n      <MoveResize\r\n        on:repaint={handleRepaint}\r\n        on:pointerup={pointerup}\r\n        id={item.id}\r\n        resizable={item[getComputedCols] && item[getComputedCols].resizable}\r\n        draggable={item[getComputedCols] && item[getComputedCols].draggable}\r\n        {xPerPx}\r\n        {yPerPx}\r\n        width={Math.min(getComputedCols, item[getComputedCols] && item[getComputedCols].w) * xPerPx - gapX * 2}\r\n        height={(item[getComputedCols] && item[getComputedCols].h) * yPerPx - gapY * 2}\r\n        top={(item[getComputedCols] && item[getComputedCols].y) * yPerPx + gapY}\r\n        left={(item[getComputedCols] && item[getComputedCols].x) * xPerPx + gapX}\r\n        item={item[getComputedCols]}\r\n        min={item[getComputedCols] && item[getComputedCols].min}\r\n        max={item[getComputedCols] && item[getComputedCols].max}\r\n        cols={getComputedCols}\r\n        {gapX}\r\n        {gapY}\r\n        {sensor}\r\n        container={scroller}\r\n        nativeContainer={container}\r\n        let:resizePointerDown\r\n        let:movePointerDown>\r\n        {#if item[getComputedCols]}\r\n          <slot {movePointerDown} {resizePointerDown} dataItem={item} item={item[getComputedCols]} index={i} />\r\n        {/if}\r\n      </MoveResize>\r\n    {/each}\r\n  {/if}\r\n</div>\r\n\r\n<script>\r\n  import { getContainerHeight } from \"./utils/container.js\";\r\n  import { moveItemsAroundItem, moveItem, getItemById, specifyUndefinedColumns, findFreeSpaceForItem } from \"./utils/item.js\";\r\n  import { onMount, createEventDispatcher } from \"svelte\";\r\n  import { getColumn, getRowsCount, throttle } from \"./utils/other.js\";\r\n  import { makeMatrixFromItems } from \"./utils/matrix.js\";\r\n  import MoveResize from \"./MoveResize/index.svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let fillSpace = false;\r\n  export let items;\r\n  export let rowHeight;\r\n  export let cols;\r\n  export let gap = [10, 10];\r\n  export let fastStart = false;\r\n  export let throttleUpdate = 100;\r\n  export let throttleResize = 100;\r\n\r\n  export let scroller = undefined;\r\n  export let sensor = 20;\r\n\r\n  let getComputedCols;\r\n\r\n  let container;\r\n\r\n  $: [gapX, gapY] = gap;\r\n\r\n  let xPerPx = 0;\r\n  let yPerPx = rowHeight;\r\n\r\n  let documentWidth;\r\n\r\n  let containerWidth;\r\n\r\n  $: containerHeight = getContainerHeight(items, yPerPx, getComputedCols);\r\n\r\n  const pointerup = (ev) => {\r\n    dispatch(\"pointerup\", {\r\n      id: ev.detail.id,\r\n      cols: getComputedCols,\r\n    });\r\n  };\r\n\r\n  const onResize = throttle(() => {\r\n    items = specifyUndefinedColumns(items, getComputedCols, cols);\r\n    dispatch(\"resize\", {\r\n      cols: getComputedCols,\r\n      xPerPx,\r\n      yPerPx,\r\n      width: containerWidth,\r\n    });\r\n  }, throttleUpdate);\r\n\r\n  onMount(() => {\r\n    const sizeObserver = new ResizeObserver((entries) => {\r\n      requestAnimationFrame(() => {\r\n        let width = entries[0].contentRect.width;\r\n\r\n        if (width === containerWidth) return;\r\n\r\n        getComputedCols = getColumn(width, cols);\r\n\r\n        xPerPx = width / getComputedCols;\r\n\r\n        if (!containerWidth) {\r\n          items = specifyUndefinedColumns(items, getComputedCols, cols);\r\n\r\n          dispatch(\"mount\", {\r\n            cols: getComputedCols,\r\n            xPerPx,\r\n            yPerPx, // same as rowHeight\r\n          });\r\n        } else {\r\n          onResize();\r\n        }\r\n\r\n        containerWidth = width;\r\n      })\r\n    });\r\n\r\n    sizeObserver.observe(container);\r\n\r\n    return () => sizeObserver.disconnect();\r\n  });\r\n\r\n  const updateMatrix = ({ detail }) => {\r\n    let activeItem = getItemById(detail.id, items);\r\n\r\n    if (activeItem) {\r\n      activeItem = {\r\n        ...activeItem,\r\n        [getComputedCols]: {\r\n          ...activeItem[getComputedCols],\r\n          ...detail.shadow,\r\n        },\r\n      };\r\n\r\n      if (fillSpace) {\r\n        items = moveItemsAroundItem(activeItem, items, getComputedCols, getItemById(detail.id, items));\r\n      } else {\r\n        items = moveItem(activeItem, items, getComputedCols, getItemById(detail.id, items));\r\n      }\r\n\r\n      if (detail.onUpdate) detail.onUpdate();\r\n\r\n      dispatch(\"change\", {\r\n        unsafeItem: activeItem,\r\n        id: activeItem.id,\r\n        cols: getComputedCols,\r\n      });\r\n    }\r\n  };\r\n\r\n  const throttleMatrix = throttle(updateMatrix, throttleResize);\r\n\r\n  const handleRepaint = ({ detail }) => {\r\n    if (!detail.isPointerUp) {\r\n      throttleMatrix({ detail });\r\n    } else {\r\n      updateMatrix({ detail });\r\n    }\r\n  };\r\n</script>\r\n",
    "<script>\r\n    import { onMount, onDestroy } from 'svelte';\r\n    let separator;\r\n    export let updateCallback = () => {\r\n        // do nothing\r\n        return;\r\n    }\r\n    let md;\r\n    const onMouseDown = (e) => {\r\n        e.preventDefault();\r\n        if (e.button !== 0) return;\r\n        md = {e,\r\n            offsetLeft:  separator.offsetLeft,\r\n            offsetTop:   separator.offsetTop,\r\n            firstWidth:  left.offsetWidth,\r\n            secondWidth: right.offsetWidth\r\n        };\r\n        window.addEventListener('mousemove', onMouseMove);\r\n        window.addEventListener('mouseup', onMouseUp);\r\n        window.addEventListener('touchmove', onMouseMove);\r\n        window.addEventListener('touchend', onMouseUp);\r\n    }\r\n    const onMouseMove = (e) => {\r\n        e.preventDefault();\r\n        if (e.button !== 0) return;\r\n        var delta = {x: e.clientX - md.e.clientX,\r\n                y: e.clientY - md.e.clientY};\r\n        // Prevent negative-sized elements\r\n        delta.x = Math.min(Math.max(delta.x, -md.firstWidth),\r\n                    md.secondWidth);\r\n        separator.style.left = md.offsetLeft + delta.x + \"px\";\r\n        left.style.width = (md.firstWidth + delta.x) + \"px\";\r\n        right.style.width = (md.secondWidth - delta.x) + \"px\";\r\n        updateCallback();\r\n    }\r\n    const onMouseUp = (e) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n            if (e.button !== 0) return;\r\n        }\r\n        updateCallback();\r\n        window.removeEventListener('mousemove', onMouseMove);\r\n        window.removeEventListener('mouseup', onMouseUp);\r\n        window.removeEventListener('touchmove', onMouseMove);\r\n        window.removeEventListener('touchend', onMouseUp);\r\n    }\r\n    function resetSize() {\r\n        if (left) left.removeAttribute('style');\r\n        if (right) right.removeAttribute('style');\r\n        if (separator) separator.removeAttribute('style');\r\n    }\r\n    function onResize() {\r\n        onMouseUp();\r\n        resetSize();\r\n    }\r\n    onMount(() => {\r\n        window.addEventListener('resize', onResize);\r\n    });\r\n    onDestroy(() => {\r\n        window.removeEventListener('resize', onResize);\r\n    });\r\n\r\n    let left, right;\r\n    export let leftPaneSize = '50%';\r\n    export let rightPaneSize = '50%';\r\n    export let minLeftPaneSize = '0';\r\n    export let minRightPaneSize = '0';\r\n    $: leftPaneSize && resetSize();\r\n    $: rightPaneSize && resetSize();\r\n</script>\r\n\r\n<style>\r\n    div.wrapper {\r\n        width: 100%;\r\n        height: 100%;\r\n        /* background-color: yellow; */\r\n        display: inline-flex;\r\n    }\r\n    div.separator {\r\n        cursor: col-resize;\r\n        height: 100%;\r\n        width: 4px;\r\n        margin-left: -2px;\r\n        z-index: 1;\r\n        background-color: #aaa;\r\n        background-image: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='10' height='30'><path d='M2 0 v30 M5 0 v30 M8 0 v30' fill='none' stroke='black'/></svg>\");\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n    div.left {\r\n        width: var(--left-panel-size);\r\n        min-width: var(--min-left-panel-size);\r\n        height: 100%;\r\n    }\r\n    div.right {\r\n        width: var(--right-panel-size);\r\n        min-width: var(--min-right-panel-size);\r\n        height: 100%;\r\n    }\r\n</style>\r\n\r\n<div class=\"wrapper\" style=\"--left-panel-size: {leftPaneSize}; --right-panel-size: {rightPaneSize}; --min-left-panel-size: {minLeftPaneSize}; --min-right-panel-size: {minRightPaneSize};\">\r\n    <div bind:this={left} class=\"left\">\r\n        <slot name=\"left\">\r\n            <div style=\"background-color: red;\">\r\n                Left Contents goes here...\r\n            </div>\r\n        </slot>\r\n    </div>\r\n    <div bind:this={separator} class=\"separator\" on:mousedown={onMouseDown} on:touchstart={onMouseDown}>\r\n    </div>\r\n    <div bind:this={right} class=\"right\">\r\n        <slot name=\"right\">\r\n            <div style=\"background-color: yellow;\">\r\n                Right Contents goes here...\r\n            </div>\r\n        </slot>\r\n    </div>\r\n</div>\r\n",
    "<script>\r\n    import { onMount, onDestroy } from 'svelte';\r\n    let separator;\r\n    export let updateCallback = () => {\r\n        // do nothing\r\n        return;\r\n    }\r\n\r\n    let md;\r\n    const onMouseDown = (e) => {\r\n        e.preventDefault();\r\n        if (e.button !== 0) return;\r\n        md = {e,\r\n            offsetLeft:  separator.offsetLeft,\r\n            offsetTop:   separator.offsetTop,\r\n            firstHeight:  top.offsetHeight,\r\n            secondHeight: down.offsetHeight\r\n        };\r\n        window.addEventListener('mousemove', onMouseMove);\r\n        window.addEventListener('mouseup', onMouseUp);\r\n        window.addEventListener('touchmove', onMouseMove);\r\n        window.addEventListener('touchend', onMouseUp);\r\n    };\r\n    const onMouseMove = (e) => {\r\n        e.preventDefault();\r\n        if (e.button !== 0) return;\r\n        var delta = {x: e.clientX - md.e.clientX,\r\n                y: e.clientY - md.e.clientY};\r\n        // Prevent negative-sized elements\r\n        delta.y = Math.min(Math.max(delta.y, -md.firstHeight),\r\n                    md.secondHeight);\r\n\r\n        separator.style.top = md.offsetTop + delta.y + \"px\";\r\n        top.style.height = (md.firstHeight + delta.y) + \"px\";\r\n        down.style.height = (md.secondHeight - delta.y) + \"px\";\r\n        updateCallback();\r\n    }\r\n    const onMouseUp = (e) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n            if (e.button !== 0) return;\r\n        }\r\n        updateCallback();\r\n        window.removeEventListener('mousemove', onMouseMove);\r\n        window.removeEventListener('mouseup', onMouseUp);\r\n        window.removeEventListener('touchmove', onMouseMove);\r\n        window.removeEventListener('touchend', onMouseUp);\r\n    }\r\n    function resetSize() {\r\n        if (top) top.removeAttribute('style');\r\n        if (down) down.removeAttribute('style');\r\n        if (separator) separator.removeAttribute('style');\r\n    }\r\n    function onResize() {\r\n        onMouseUp();\r\n        resetSize();\r\n    }\r\n    onMount(() => {\r\n        window.addEventListener('resize', onResize);\r\n    });\r\n    onDestroy(() => {\r\n        window.removeEventListener('resize', onResize);\r\n    });\r\n    let top, down;\r\n    export let topPanelSize = '50%';\r\n    export let downPanelSize = '50%';\r\n    export let minTopPaneSize = '0';\r\n    export let minDownPaneSize = '0';\r\n    $: topPanelSize && resetSize();\r\n    $: downPanelSize && resetSize();\r\n</script>\r\n\r\n<style>\r\n    div.wrapper {\r\n        width: 100%;\r\n        height: 100%;\r\n        /* background-color: yellow; */\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    div.separator {\r\n        cursor: row-resize;\r\n        width: 100%;\r\n        height: 4px;\r\n        margin-top: -2px;\r\n        z-index: 1;\r\n        background-color: #aaa;\r\n    }\r\n    div.top {\r\n        height: var(--top-panel-size);\r\n        min-height: var(--min-top-panel-size);\r\n        width: 100%;\r\n    }\r\n    div.down {\r\n        height: var(--down-panel-size);\r\n        min-height: var(--min-down-panel-size);\r\n        width: 100%;\r\n    }\r\n</style>\r\n\r\n<div class=\"wrapper\" style=\"--top-panel-size: {topPanelSize}; --down-panel-size: {downPanelSize}; --min-top-panel-size:{minTopPaneSize}; --min-down-panel-size: {minDownPaneSize};\">\r\n    <div bind:this={top} class=\"top\">\r\n        <slot name=\"top\">\r\n            <div style=\"background-color: red;\">\r\n                Top Contents goes here...\r\n            </div>\r\n        </slot>\r\n    </div>\r\n    <div bind:this={separator} class=\"separator\" on:mousedown={onMouseDown} on:touchstart={onMouseDown}>\r\n    </div>\r\n    <div bind:this={down} class=\"down\">\r\n        <slot name=\"down\">\r\n            <div style=\"background-color: yellow;\">\r\n                Down Contents goes here...\r\n            </div>\r\n        </slot>\r\n    </div>\r\n</div>\r\n",
    "{#if show}\r\n<div class=\"sidebar\" transition:fly={{x: 250, opacity: 1}}>\r\n  <header>\r\n    <h2>\r\n      <Fa icon={faCogs} size=\"sm\" />\r\n      Actions\r\n    </h2>\r\n  </header>\r\n  <div class=\"container\">\r\n    <button on:click={add}>\r\n      <Fa icon={faStickyNote} size=\"sm\"/>\r\n      <span>Ajouter note</span>\r\n    </button>\r\n    <button>\r\n      <Fa icon={faPhotoVideo} size=\"sm\"/>\r\n      <span>Ajouter media</span>\r\n    </button>\r\n    <button>\r\n      <Fa icon={faUserPlus} size=\"sm\"/>\r\n      <span>Ajouter contributeur</span>\r\n    </button>\r\n  </div>\r\n</div>\r\n{/if}\r\n\r\n\r\n\r\n<script>\r\nimport { fly } from 'svelte/transition';\r\nimport Fa from 'svelte-fa';\r\nimport { faCogs, faStickyNote, faPhotoVideo, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { createEventDispatcher } from 'svelte';\r\n\r\nconst dispatch = createEventDispatcher();\r\n\r\nfunction add() {\r\n        dispatch('create')\r\n}\r\n\r\nexport let show = false;\r\n</script>\r\n\t\t\r\n<style>\r\n    .sidebar {\r\n      top: 0;\r\n      right: 0;\r\n      height: 100%;\r\n      width: 30%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-top: 15px;\r\n      border-left: 1px solid #aaa;\r\n  }\r\n\r\n   /* HEADER */\r\n\r\n    header {\r\n        height: 4em;\r\n        display: block;\r\n        position: relative;\r\n        background-color:#080808;\r\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16),\r\n        0 2px 10px 0 rgba(0, 0, 0, 0.12);\r\n        text-align: center;\r\n        flex: 0 0 4em;\r\n        transition: color .5s, background-color .5s;\r\n  }\r\n\r\n  .container {\r\n    flex: 1;\r\n    overflow: hidden;\r\n    display: inline-block;\r\n    transition: background-color 0.5s;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .container button {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .container button span {\r\n    margin-left: 10px;\r\n  }\r\n</style>",
    "<script>\r\n    import { createEventDispatcher } from \"svelte\";\r\n    // FIXME : let the cursor appear directly (input.select())\r\n    export let value = \"\";\r\n    let copy = `${value}`;\r\n    let focus = false;\r\n    const dispatch = createEventDispatcher();\r\n    function handleKeyup(e) {\r\n      if (e.code === \"Enter\") focus = false;\r\n      dispatch(\"keyup\");\r\n    }\r\n    $: focus ? (value = copy) : (copy = value);\r\n  </script>\r\n  \r\n  <style>\r\n    input {\r\n      width: 100%;\r\n    }\r\n    input {\r\n      border: 0;\r\n      width: 100%;\r\n      font-weight: 100;\r\n      border-bottom: 2px solid var(--back2);\r\n      background: transparent;\r\n    }\r\n    input::placeholder {\r\n      color: transparent;\r\n    }\r\n  </style>\r\n  \r\n  {#if focus}\r\n    <input\r\n      type=\"text\"\r\n      bind:value={copy}\r\n      on:blur={() => (focus = false)}\r\n      on:keyup|preventDefault={handleKeyup} />\r\n  {:else}\r\n    <div on:dblclick={() => (focus = true)}>\r\n      <p>{value}</p>\r\n    </div>\r\n  {/if}",
    "<script>\r\n    import toast from \"../stores/toast.js\";\r\n    import { fly } from \"svelte/transition\";\r\n    let timeout;\r\n    $: {\r\n      $toast, clearTimeout(timeout);\r\n      timeout = setTimeout(() => toast.set(undefined), 4000);\r\n    }\r\n  </script>\r\n  \r\n  <style>\r\n    .toast {\r\n      position: absolute;\r\n      z-index: 10;\r\n      text-align: center;\r\n      top: 15px;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n    .toast .message {\r\n      color: #000;\r\n      display: inline-block;\r\n      cursor: pointer;\r\n      padding: 0.3rem;\r\n      padding-left: 0.9rem;\r\n      padding-right: 0.9rem;\r\n      border-radius: 1rem;\r\n      box-shadow: 0 6px 13px 0 rgba(0, 0, 0, 0.35);\r\n      width: max-content;\r\n      background: linear-gradient(\r\n        125deg,\r\n        var(--highlight1) 10%,\r\n        var(--highlight2) 30% 70%,\r\n        var(--highlight1) 90%\r\n      );\r\n    }\r\n  </style>\r\n  \r\n  {#if $toast}\r\n    <div\r\n      class=\"toast\"\r\n      in:fly={{ y: -50, duration: 800 }}\r\n      out:fly={{ y: -50, duration: 800 }}>\r\n      <div class=\"message\">{$toast}</div>\r\n    </div>\r\n  {/if}",
    "<style>\r\n    :global(body), :global(html), :global(#root) {\r\n        height: 100%;\r\n        width: 100%;\r\n        display: block;\r\n        margin: 0;\r\n        padding: 0;\r\n        color: white;\r\n        background-color: #080808;\r\n        font-family: \"Montserrat\", sans-serif;\r\n  }\r\n\r\n    #app-container {\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n  }\r\n\r\n  .container {\r\n    flex: 1;\r\n    overflow: hidden;\r\n    display: flex;\r\n    transition: background-color 0.5s;\r\n  }\r\n\r\n   /* HEADER */\r\n\r\n    header {\r\n        height: 4em;\r\n        display: block;\r\n        position: relative;\r\n        background-color:#484848;\r\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16),\r\n        0 2px 10px 0 rgba(0, 0, 0, 0.12);\r\n        text-align: center;\r\n        flex: 0 0 4em;\r\n        transition: color .5s, background-color .5s;\r\n  }\r\n\r\n    header > span i:not(:first-child) {\r\n        margin-left: 1em;\r\n        display: inline-block;\r\n  }\r\n\r\n    header > span i:not(:first-child):after {\r\n        content: '·';\r\n        position: relative;\r\n        left: -1.8em;\r\n  }\r\n    .widget {\r\n      background: #a30078;\r\n      height: 100%;\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n\r\n    .remove { \r\n        cursor: pointer;\r\n        position: absolute;\r\n        right: 5px; \r\n        top: 3px;\r\n        user-select: none;\r\n    }\r\n\r\n    nav {\r\n        height: 4em;\r\n        display: flex;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        transition: height .5s;\r\n    }\r\n\r\n    nav div {\r\n        height: 4em;\r\n        width: 4em;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        cursor: pointer;\r\n        position: relative;\r\n        cursor: pointer;\r\n    }\r\n\r\n    nav span {\r\n        position: absolute;\r\n        top: 4.2em;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        background-color: #333333;\r\n        color: white;\r\n        transition: opacity .5s, visibility .5s;\r\n        padding: 3px;\r\n        border-radius: 2px;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    nav div:last-child span {\r\n        right: .2em;\r\n    }\r\n\r\n    nav i:hover + span {\r\n        opacity: 1;\r\n        visibility: visible;\r\n    }\r\n</style>\r\n    \r\n<main>\r\n    <div id=\"app-container\">\r\n        <header>\r\n            <h1>\r\n                <Fa icon={faClone} size=\"sm\" />\r\n        Padlet Time\r\n            </h1>\r\n            <nav>\r\n                <div on:click={() => sidebar_show = !sidebar_show}>\r\n                    <Fa icon={faPlus} size=\"sm\"/>\r\n                    <span>Actions</span>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n        <div class=container>\r\n            <Grid bind:items={items} gap={[gapX, gapY]} rowHeight={100} let:item let:dataItem {cols} fillSpace=true>\r\n                <div class=widget >\r\n                    <span on:pointerdown={e => e.stopPropagation()}\r\n                        on:click={dataItem.delete}\r\n                        class=remove\r\n                        >\r\n                        ✕\r\n                    </span>\r\n                    {#if  dataItem.video}\r\n                      <p>video</p>\r\n                    {:else if dataItem.photo}\r\n                      <p>photo</p>\r\n                    {:else}\r\n                    <TextSpace\r\n                    bind:value= {text}\r\n                    on:keyup={dataItem.update} />\r\n                    {/if}\r\n                </div>\r\n            </Grid>\r\n            <Sidebar bind:show={sidebar_show} on:create={room.cards.add} />\r\n        </div>\r\n    </div>\r\n</main>\r\n    \r\n<script>\r\n    import Grid from \"svelte-grid\";\r\n    import gridHelp from \"svelte-grid/build/helper/index.mjs\";\r\n    import Fa from 'svelte-fa';\r\n    import { faClone, faPlus } from '@fortawesome/free-solid-svg-icons';\r\n    import Sidebar from '../components/Sidebar.svelte';\r\n    import TextSpace from '../components/TextSpace.svelte';\r\n    import room from \"../stores/room.js\";\r\n    import { onMount, onDestroy } from \"svelte\";\r\n\r\n\r\n    onMount(() => {\r\n    // If room does not exist, go back to home page\r\n      if (!$room && $room.id) {\r\n        room.leave();\r\n        navigate(\"/\", { replace: true });\r\n      }\r\n   });\r\n\r\n    onDestroy(() => {\r\n    // Tell the server we're leaving the room\r\n      if ($room && $room.id) {\r\n        room.leave();\r\n      }\r\n    });\r\n\r\n    const COLS = 6;\r\n\r\n  $room.cards.forEach(card => {\r\n        text = card.body\r\n        let newItem = {\r\n        6: gridHelp.item({\r\n          w: 2,\r\n          h: 2,\r\n          x: 0,\r\n          y: 0,\r\n        }),\r\n        id: id(),\r\n        video: false,\r\n        photo: false,\r\n        update: () => room.cards.update(card),\r\n        delete: () => room.cards.delete(card.id)\r\n      };\r\n\r\n    let findOutPosition = gridHelp.findSpace(newItem, items, COLS);\r\n\r\n    newItem = {\r\n      ...newItem,\r\n      [COLS]: {\r\n        ...newItem[COLS],\r\n        ...findOutPosition,\r\n      },\r\n    };\r\n\r\n    items = [...items, ...[newItem]];\t\r\n    });\r\n   \r\n    let sidebar_show = false;\r\n    let text = \"\";\r\n    const id = () => \"_\" + Math.random().toString(36).substr(2, 9);\r\n    \r\n    let gapX = 20;\r\n    let gapY = 20;\r\n    \r\n    let items = [];\r\n    \r\n    const cols = [\r\n      [ 1100, 6 ],\r\n    ];\r\n\r\n</script>",
    "<script>\r\n    import Fa from 'svelte-fa';\r\n    import { faClone} from '@fortawesome/free-solid-svg-icons';\r\n</script>\r\n\r\n\r\n<main>\r\n    <div id=\"app-container\">\r\n        <header>\r\n            <h1>\r\n                <Fa icon={faClone} size=\"sm\" />\r\n        Padlet Time\r\n            </h1>\r\n        </header>\r\n        <div class=container>\r\n            <div class=\"wrapper\">\r\n                <button>Rejoindre une salle</button>\r\n                <button>Crée une salle</button>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</main>\r\n\r\n\r\n<style>\r\n    :global(body), :global(html), :global(#root) {\r\n        height: 100%;\r\n        width: 100%;\r\n        display: block;\r\n        margin: 0;\r\n        padding: 0;\r\n        color: white;\r\n        background-color: #080808;\r\n        font-family: \"Montserrat\", sans-serif;\r\n  }\r\n\r\n    #app-container {\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n  }\r\n\r\n  .container {\r\n    flex: 1;\r\n    overflow: hidden;\r\n    display: block;\r\n    transition: background-color 0.5s;\r\n  }\r\n\r\n  div.wrapper {\r\n    width: 80%;\r\n    height: 800px;\r\n    margin: auto;\r\n    margin-top: 30px;\r\n  }\r\n\r\n left, right {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    align-content: center;\r\n    background-color: rgba(0, 0, 0, 0.98);\r\n}\r\n\r\n   /* HEADER */\r\n\r\n    header {\r\n        height: 4em;\r\n        display: block;\r\n        position: relative;\r\n        background-color:#484848;\r\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16),\r\n        0 2px 10px 0 rgba(0, 0, 0, 0.12);\r\n        text-align: center;\r\n        flex: 0 0 4em;\r\n        transition: color .5s, background-color .5s;\r\n  }\r\n</style>",
    "<script>\r\n    import Particles from \"svelte-particles\";\r\n    import {particlesConfig} from \"../effects/particles.svelte\";\r\n</script>\r\n\r\n<style>\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n        font-family: sans-serif;\r\n        height: 100vh;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    header {\r\n        display: none;\r\n    }\r\n\r\n    .box {\r\n        background-color: rgba(0, 0, 0, 0.98);\r\n        border-radius: 10px;\r\n        box-shadow: 0 15px 25px rgba(0, 0, 0, 0.98);\r\n        margin: auto auto;\r\n        padding: 40px;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n    .box h2 {\r\n        margin: 0 0 30px 0;\r\n        padding: 0;\r\n        color: #fff;\r\n        text-align: center;\r\n    }\r\n\r\n    .box .inputBox label {\r\n        color: #fff;\r\n    }\r\n\r\n    .box .inputBox input {\r\n        background: transparent;\r\n        border: none;\r\n        border-bottom: 1px solid #fff;\r\n        color: #fff;\r\n        font-size: 18px;\r\n        letter-spacing: 2px;\r\n        margin-bottom: 30px;\r\n        outline: none;\r\n        padding: 10px 0;\r\n        width: 100%;\r\n    }\r\n\r\n    .box input[type=\"submit\"], .box button[type=\"submit\"], a.button {\r\n        font-family: sans-serif;\r\n        background: #03a9f4;\r\n        font-size: 11px;\r\n        border: none;\r\n        border-radius: 5px;\r\n        color: #fff;\r\n        cursor: pointer;\r\n        font-weight: 600;\r\n        padding: 10px 20px;\r\n        letter-spacing: 2px;\r\n        outline: none;\r\n        text-transform: uppercase;\r\n        text-decoration: none;\r\n        margin: 2px 10px 2px 0;\r\n        display: inline-block;\r\n    }\r\n\r\n    .box input[type=\"submit\"]:hover, .box button[type=\"submit\"]:hover, a.button:hover {\r\n        opacity: 0.8;\r\n    }\r\n</style>\r\n\r\n<Particles id=\"tsparticles\" options=\"{particlesConfig}\"/>\r\n<main class=\"box\">\r\n    <h2>Login</h2>\r\n    <form>\r\n        <div class=\"inputBox\">\r\n            <label for=\"userName\">Username</label>\r\n            <input type=\"text\" name=\"userName\" id=\"userName\" placeholder=\"type your username\" required/>\r\n        </div>\r\n        <div class=\"inputBox\">\r\n            <label for=\"userPassword\">Password</label>\r\n            <input type=\"password\" name=\"userPassword\" id=\"userPassword\" placeholder=\"type your password\"\r\n                   required/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\" name=\"\" style=\"float: left;\">Submit</button>\r\n            <a class=\"button\" href=\"/register\" style=\"float: left;\">Register</a>\r\n        </div>\r\n    </form>\r\n</main>\r\n<footer>\r\n</footer>\r\n",
    "<script>\r\n    import Particles from \"svelte-particles\";\r\n    import {particlesConfig} from \"../effects/particles.svelte\";\r\n</script>\r\n\r\n<style>\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n        font-family: sans-serif;\r\n        height: 100vh;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    header {\r\n        display: none;\r\n    }\r\n\r\n    .box {\r\n        background-color: rgba(0, 0, 0, 0.8);\r\n        border-radius: 10px;\r\n        box-shadow: 0 15px 25px rgba(0, 0, 0, 0.8);\r\n        margin: auto auto;\r\n        padding: 40px;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n    .box h2 {\r\n        margin: 0 0 30px 0;\r\n        padding: 0;\r\n        color: #fff;\r\n        text-align: center;\r\n    }\r\n\r\n    .box .inputBox label {\r\n        color: #fff;\r\n    }\r\n\r\n    .box .inputBox input {\r\n        background: transparent;\r\n        border: none;\r\n        border-bottom: 1px solid #fff;\r\n        color: #fff;\r\n        font-size: 18px;\r\n        letter-spacing: 2px;\r\n        margin-bottom: 30px;\r\n        outline: none;\r\n        padding: 10px 0;\r\n        width: 100%;\r\n    }\r\n\r\n    .box input[type=\"submit\"], .box button[type=\"submit\"], a.button {\r\n        font-family: sans-serif;\r\n        background: #03a9f4;\r\n        font-size: 11px;\r\n        border: none;\r\n        border-radius: 5px;\r\n        color: #fff;\r\n        cursor: pointer;\r\n        font-weight: 600;\r\n        padding: 10px 20px;\r\n        letter-spacing: 2px;\r\n        outline: none;\r\n        text-transform: uppercase;\r\n        text-decoration: none;\r\n        margin: 2px 10px 2px 0;\r\n        display: inline-block;\r\n    }\r\n\r\n    .box input[type=\"submit\"]:hover, .box button[type=\"submit\"]:hover, a.button:hover {\r\n        opacity: 0.8;\r\n    }\r\n</style>\r\n\r\n<Particles id=\"tsparticles\" options=\"{particlesConfig}\"/>\r\n<main class=\"box\">\r\n    <h2>Register</h2>\r\n    <form>\r\n        <div class=\"inputBox\">\r\n            <label for=\"userName\">Username</label>\r\n            <input type=\"text\" name=\"userName\" id=\"userName\" placeholder=\"type your username\" required/>\r\n        </div>\r\n        <div class=\"inputBox\">\r\n            <label for=\"userPassword\">Password</label>\r\n            <input type=\"password\" name=\"userPassword\" id=\"userPassword\" placeholder=\"type your password\"\r\n                   required/>\r\n        </div>\r\n        <div class=\"inputBox\">\r\n            <label for=\"userConfirmPassword\">Confirm Password</label>\r\n            <input type=\"password\" name=\"userPassword\" id=\"userConfirmPassword\" placeholder=\"confirm your password\"\r\n                   required/>\r\n        </div>\r\n        <button type=\"submit\" name=\"\" style=\"float: left;\">Submit</button>\r\n        <a class=\"button\" href=\"/\" style=\"float: left;\">Login</a>\r\n    </form>\r\n</main>\r\n<footer>\r\n</footer>\r\n"
  ],
  "names": [],
  "mappings": "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"
}